{"id":"node_modules/ethers/lib.esm/wordlists/wordlist.js","dependencies":[{"name":"E:\\myprojects\\blockchain\\node_modules\\ethers\\lib.esm\\wordlists\\wordlist.js.map","includedInParent":true,"mtime":1724758823125},{"name":"E:\\myprojects\\blockchain\\node_modules\\ethers\\src.ts\\wordlists\\wordlist.ts","includedInParent":true,"mtime":1724758823377},{"name":"E:\\myprojects\\blockchain\\package.json","includedInParent":true,"mtime":1724758869620},{"name":"E:\\myprojects\\blockchain\\node_modules\\ethers\\lib.esm\\package.json","includedInParent":true,"mtime":1724758822876},{"name":"../utils/index.js","loc":{"line":1,"column":33,"index":33},"parent":"E:\\myprojects\\blockchain\\node_modules\\ethers\\lib.esm\\wordlists\\wordlist.js","resolved":"E:\\myprojects\\blockchain\\node_modules\\ethers\\lib.esm\\utils\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Wordlist = void 0;\nvar _index = require(\"../utils/index.js\");\n/**\n *  A Wordlist represents a collection of language-specific\n *  words used to encode and devoce [[link-bip-39]] encoded data\n *  by mapping words to 11-bit values and vice versa.\n */\nclass Wordlist {\n  locale;\n  /**\n   *  Creates a new Wordlist instance.\n   *\n   *  Sub-classes MUST call this if they provide their own constructor,\n   *  passing in the locale string of the language.\n   *\n   *  Generally there is no need to create instances of a Wordlist,\n   *  since each language-specific Wordlist creates an instance and\n   *  there is no state kept internally, so they are safe to share.\n   */\n  constructor(locale) {\n    (0, _index.defineProperties)(this, {\n      locale\n    });\n  }\n  /**\n   *  Sub-classes may override this to provide a language-specific\n   *  method for spliting %%phrase%% into individual words.\n   *\n   *  By default, %%phrase%% is split using any sequences of\n   *  white-space as defined by regular expressions (i.e. ``/\\s+/``).\n   */\n  split(phrase) {\n    return phrase.toLowerCase().split(/\\s+/g);\n  }\n  /**\n   *  Sub-classes may override this to provider a language-specific\n   *  method for joining %%words%% into a phrase.\n   *\n   *  By default, %%words%% are joined by a single space.\n   */\n  join(words) {\n    return words.join(\" \");\n  }\n}\nexports.Wordlist = Wordlist;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":0}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":4}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":10}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":13}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":1,"column":0},"generated":{"line":7,"column":20}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":3,"column":0},"generated":{"line":8,"column":0}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":8,"column":6},"generated":{"line":13,"column":0}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":8,"column":22},"generated":{"line":13,"column":6}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":8,"column":30},"generated":{"line":13,"column":14}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":8,"column":30},"generated":{"line":13,"column":15}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":14,"column":2}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":9,"column":10},"generated":{"line":14,"column":8}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":11,"column":4},"generated":{"line":15,"column":2}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":25,"column":2}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":21,"column":4},"generated":{"line":25,"column":13}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":21,"column":16},"generated":{"line":25,"column":14}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":21,"column":30},"generated":{"line":25,"column":20}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":21,"column":30},"generated":{"line":25,"column":22}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":22,"column":8},"generated":{"line":26,"column":4}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":22,"column":8},"generated":{"line":26,"column":8}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":22,"column":24},"generated":{"line":26,"column":31}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":22,"column":35},"generated":{"line":26,"column":33}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":22,"column":39},"generated":{"line":26,"column":37}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":22,"column":41},"generated":{"line":26,"column":39}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":22,"column":43},"generated":{"line":27,"column":6}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":22,"column":49},"generated":{"line":28,"column":4}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":22,"column":51},"generated":{"line":28,"column":5}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":22,"column":52},"generated":{"line":28,"column":6}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":23,"column":4},"generated":{"line":29,"column":2}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":25,"column":4},"generated":{"line":30,"column":2}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":32,"column":4},"generated":{"line":37,"column":2}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":32,"column":9},"generated":{"line":37,"column":7}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":32,"column":10},"generated":{"line":37,"column":8}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":32,"column":24},"generated":{"line":37,"column":14}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":32,"column":24},"generated":{"line":37,"column":16}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":33,"column":8},"generated":{"line":38,"column":4}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":33,"column":15},"generated":{"line":38,"column":11}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":33,"column":21},"generated":{"line":38,"column":17}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":33,"column":22},"generated":{"line":38,"column":18}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":33,"column":33},"generated":{"line":38,"column":29}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":33,"column":33},"generated":{"line":38,"column":30}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":33,"column":35},"generated":{"line":38,"column":31}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":33,"column":36},"generated":{"line":38,"column":32}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":33,"column":41},"generated":{"line":38,"column":37}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":33,"column":42},"generated":{"line":38,"column":38}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":33,"column":48},"generated":{"line":38,"column":44}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":33,"column":49},"generated":{"line":38,"column":45}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":34,"column":4},"generated":{"line":39,"column":2}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":36,"column":4},"generated":{"line":40,"column":2}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":42,"column":4},"generated":{"line":46,"column":2}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":42,"column":8},"generated":{"line":46,"column":6}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":42,"column":9},"generated":{"line":46,"column":7}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":42,"column":29},"generated":{"line":46,"column":12}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":42,"column":29},"generated":{"line":46,"column":14}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":43,"column":8},"generated":{"line":47,"column":4}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":43,"column":15},"generated":{"line":47,"column":11}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":43,"column":20},"generated":{"line":47,"column":16}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":43,"column":21},"generated":{"line":47,"column":17}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":43,"column":25},"generated":{"line":47,"column":21}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":43,"column":26},"generated":{"line":47,"column":22}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":43,"column":29},"generated":{"line":47,"column":25}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":43,"column":30},"generated":{"line":47,"column":26}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":44,"column":4},"generated":{"line":48,"column":2}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":50,"column":0}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":50,"column":7}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":50,"column":8}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":50,"column":16}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":50,"column":19}},{"source":"../../src.ts/wordlists/wordlist.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":50,"column":27}}],"sources":{"../../src.ts/wordlists/wordlist.ts":"import { defineProperties } from \"../utils/index.js\";\n\n/**\n *  A Wordlist represents a collection of language-specific\n *  words used to encode and devoce [[link-bip-39]] encoded data\n *  by mapping words to 11-bit values and vice versa.\n */\nexport abstract class Wordlist {\n    locale!: string;\n\n    /**\n     *  Creates a new Wordlist instance.\n     *\n     *  Sub-classes MUST call this if they provide their own constructor,\n     *  passing in the locale string of the language.\n     *\n     *  Generally there is no need to create instances of a Wordlist,\n     *  since each language-specific Wordlist creates an instance and\n     *  there is no state kept internally, so they are safe to share.\n     */\n    constructor(locale: string) {\n        defineProperties<Wordlist>(this, { locale });\n    }\n\n    /**\n     *  Sub-classes may override this to provide a language-specific\n     *  method for spliting %%phrase%% into individual words.\n     *\n     *  By default, %%phrase%% is split using any sequences of\n     *  white-space as defined by regular expressions (i.e. ``/\\s+/``).\n     */\n    split(phrase: string): Array<string> {\n        return phrase.toLowerCase().split(/\\s+/g)\n    }\n\n    /**\n     *  Sub-classes may override this to provider a language-specific\n     *  method for joining %%words%% into a phrase.\n     *\n     *  By default, %%words%% are joined by a single space.\n     */\n    join(words: Array<string>): string {\n        return words.join(\" \");\n    }\n\n    /**\n     *  Maps an 11-bit value into its coresponding word in the list.\n     *\n     *  Sub-classes MUST override this.\n     */\n    abstract getWord(index: number): string;\n\n    /**\n     *  Maps a word to its corresponding 11-bit value.\n     *\n     *  Sub-classes MUST override this.\n     */\n    abstract getWordIndex(word: string): number;\n}\n"},"lineCount":null}},"error":null,"hash":"5e59777ccc809a7c31208f87b981e810","cacheData":{"env":{}}}