{"id":"node_modules/ethers/lib.esm/constants/numbers.js","dependencies":[{"name":"E:\\myprojects\\blockchain\\node_modules\\ethers\\lib.esm\\constants\\numbers.js.map","includedInParent":true,"mtime":1724758823039},{"name":"E:\\myprojects\\blockchain\\node_modules\\ethers\\src.ts\\constants\\numbers.ts","includedInParent":true,"mtime":1724758823306},{"name":"E:\\myprojects\\blockchain\\package.json","includedInParent":true,"mtime":1724758869620},{"name":"E:\\myprojects\\blockchain\\node_modules\\ethers\\lib.esm\\package.json","includedInParent":true,"mtime":1724758822876}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WeiPerEther = exports.N = exports.MinInt256 = exports.MaxUint256 = exports.MaxInt256 = void 0;\n/**\n *  A constant for the order N for the secp256k1 curve.\n *\n *  (**i.e.** ``0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141n``)\n */\nconst N = exports.N = BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n/**\n *  A constant for the number of wei in a single ether.\n *\n *  (**i.e.** ``1000000000000000000n``)\n */\nconst WeiPerEther = exports.WeiPerEther = BigInt(\"1000000000000000000\");\n/**\n *  A constant for the maximum value for a ``uint256``.\n *\n *  (**i.e.** ``0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn``)\n */\nconst MaxUint256 = exports.MaxUint256 = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n/**\n *  A constant for the minimum value for an ``int256``.\n *\n *  (**i.e.** ``-8000000000000000000000000000000000000000000000000000000000000000n``)\n */\nconst MinInt256 = exports.MinInt256 = BigInt(\"0x8000000000000000000000000000000000000000000000000000000000000000\") * BigInt(-1);\n/**\n *  A constant for the maximum value for an ``int256``.\n *\n *  (**i.e.** ``0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn``)\n */\nconst MaxInt256 = exports.MaxInt256 = BigInt(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");"},"sourceMaps":{"js":{"mappings":[{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":7,"column":0}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":7,"column":7},"generated":{"line":12,"column":0}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":12,"column":6}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":7,"column":14},"generated":{"line":12,"column":7}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":7,"column":14},"generated":{"line":12,"column":10}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":7,"column":14},"generated":{"line":12,"column":17}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":7,"column":14},"generated":{"line":12,"column":18}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":7,"column":14},"generated":{"line":12,"column":19}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":7,"column":25},"generated":{"line":12,"column":22}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":7,"column":31},"generated":{"line":12,"column":28}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":7,"column":32},"generated":{"line":12,"column":29}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":7,"column":100},"generated":{"line":12,"column":97}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":7,"column":101},"generated":{"line":12,"column":98}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":9,"column":0},"generated":{"line":13,"column":0}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":14,"column":7},"generated":{"line":18,"column":0}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":14,"column":13},"generated":{"line":18,"column":6}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":14,"column":24},"generated":{"line":18,"column":17}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":14,"column":24},"generated":{"line":18,"column":20}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":14,"column":24},"generated":{"line":18,"column":27}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":14,"column":24},"generated":{"line":18,"column":28}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":14,"column":24},"generated":{"line":18,"column":39}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":14,"column":35},"generated":{"line":18,"column":42}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":14,"column":41},"generated":{"line":18,"column":48}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":14,"column":42},"generated":{"line":18,"column":49}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":14,"column":63},"generated":{"line":18,"column":70}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":14,"column":64},"generated":{"line":18,"column":71}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":16,"column":0},"generated":{"line":19,"column":0}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":21,"column":7},"generated":{"line":24,"column":0}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":21,"column":13},"generated":{"line":24,"column":6}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":21,"column":23},"generated":{"line":24,"column":16}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":21,"column":23},"generated":{"line":24,"column":19}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":21,"column":23},"generated":{"line":24,"column":26}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":21,"column":23},"generated":{"line":24,"column":27}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":21,"column":23},"generated":{"line":24,"column":37}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":24,"column":40}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":21,"column":40},"generated":{"line":24,"column":46}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":21,"column":41},"generated":{"line":24,"column":47}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":21,"column":109},"generated":{"line":24,"column":115}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":21,"column":110},"generated":{"line":24,"column":116}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":28,"column":7},"generated":{"line":30,"column":0}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":28,"column":13},"generated":{"line":30,"column":6}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":28,"column":22},"generated":{"line":30,"column":15}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":28,"column":22},"generated":{"line":30,"column":18}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":28,"column":22},"generated":{"line":30,"column":25}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":28,"column":22},"generated":{"line":30,"column":26}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":28,"column":22},"generated":{"line":30,"column":35}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":28,"column":33},"generated":{"line":30,"column":38}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":28,"column":39},"generated":{"line":30,"column":44}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":28,"column":40},"generated":{"line":30,"column":45}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":28,"column":108},"generated":{"line":30,"column":113}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":28,"column":109},"generated":{"line":30,"column":114}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":28,"column":112},"generated":{"line":30,"column":117}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":28,"column":118},"generated":{"line":30,"column":123}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":28,"column":119},"generated":{"line":30,"column":124}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":28,"column":120},"generated":{"line":30,"column":125}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":28,"column":121},"generated":{"line":30,"column":126}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":28,"column":122},"generated":{"line":30,"column":127}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":35,"column":7},"generated":{"line":36,"column":0}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":35,"column":13},"generated":{"line":36,"column":6}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":35,"column":22},"generated":{"line":36,"column":15}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":35,"column":22},"generated":{"line":36,"column":18}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":35,"column":22},"generated":{"line":36,"column":25}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":35,"column":22},"generated":{"line":36,"column":26}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":35,"column":22},"generated":{"line":36,"column":35}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":35,"column":33},"generated":{"line":36,"column":38}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":35,"column":39},"generated":{"line":36,"column":44}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":35,"column":40},"generated":{"line":36,"column":45}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":35,"column":108},"generated":{"line":36,"column":113}},{"source":"../../src.ts/constants/numbers.ts","name":null,"original":{"line":35,"column":109},"generated":{"line":36,"column":114}}],"sources":{"../../src.ts/constants/numbers.ts":"\n/**\n *  A constant for the order N for the secp256k1 curve.\n *\n *  (**i.e.** ``0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141n``)\n */\nexport const N: bigint = BigInt(\"0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141\");\n\n/**\n *  A constant for the number of wei in a single ether.\n *\n *  (**i.e.** ``1000000000000000000n``)\n */\nexport const WeiPerEther: bigint = BigInt(\"1000000000000000000\");\n\n/**\n *  A constant for the maximum value for a ``uint256``.\n *\n *  (**i.e.** ``0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn``)\n */\nexport const MaxUint256: bigint = BigInt(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\n/**\n *  A constant for the minimum value for an ``int256``.\n *\n *  (**i.e.** ``-8000000000000000000000000000000000000000000000000000000000000000n``)\n */\nexport const MinInt256: bigint = BigInt(\"0x8000000000000000000000000000000000000000000000000000000000000000\") * BigInt(-1);\n\n/**\n *  A constant for the maximum value for an ``int256``.\n *\n *  (**i.e.** ``0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffn``)\n */\nexport const MaxInt256: bigint = BigInt(\"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n"},"lineCount":null}},"error":null,"hash":"3bdaafd5c859e3efaf2c1d7f08c90c05","cacheData":{"env":{}}}